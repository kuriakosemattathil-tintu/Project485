var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { classNames } from '@progress/kendo-react-common';
/**
 * @hidden
 */
var DropDownWrapper = /** @class */ (function (_super) {
    __extends(DropDownWrapper, _super);
    function DropDownWrapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DropDownWrapper.prototype.render = function () {
        var _a = this.props, disabled = _a.disabled, focused = _a.focused, style = _a.style, ariaExpanded = _a.ariaExpanded, ariaOwns = _a.ariaOwns, ariaActiveDescendant = _a.ariaActiveDescendant, tabIndex = _a.tabIndex;
        return (React.createElement("span", { role: 'listbox', tabIndex: disabled ? undefined : tabIndex, className: classNames('k-dropdown-wrap', this.props.className, {
                'k-state-default': !disabled,
                'k-state-focused': focused,
                'k-state-disabled': disabled
            }), style: style, onFocus: this.props.onFocus, onBlur: this.props.onBlur, onKeyDown: this.props.onKeyDown, onKeyPress: this.props.onKeyPress, onClick: this.props.onClick, "aria-disabled": disabled || undefined, "aria-haspopup": true, "aria-expanded": ariaExpanded, "aria-owns": ariaOwns, "aria-activedescendant": ariaActiveDescendant }, this.props.children));
    };
    return DropDownWrapper;
}(React.Component));
export default DropDownWrapper;
//# sourceMappingURL=DropDownWrapper.js.map
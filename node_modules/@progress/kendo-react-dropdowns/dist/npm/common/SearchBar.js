"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
/**
 * @hidden
 */
var SearchBar = /** @class */ (function (_super) {
    __extends(SearchBar, _super);
    function SearchBar(props) {
        var _this = _super.call(this, props) || this;
        _this.valueChanged = false;
        _this.deleting = false;
        _this.text = '';
        _this.text = props.value;
        return _this;
    }
    SearchBar.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.focused && this.input && document.activeElement !== this.input) {
            this.input.focus();
        }
    };
    SearchBar.prototype.componentWillUpdate = function (nextProps, _) {
        var value = this.props.value;
        var nextValue = nextProps.value;
        var nextSuggestedText = nextProps.suggestedText;
        var input = this.input;
        var selectionAtEnd = input && input.selectionEnd === input.value.length;
        this.valueChanged = value !== nextValue;
        this.deleting = this.valueChanged && value.startsWith(nextValue);
        this.text = (selectionAtEnd && nextSuggestedText && this.valueChanged && !this.deleting) ?
            nextValue + nextSuggestedText.substring(nextValue.length) : nextValue;
    };
    SearchBar.prototype.componentDidUpdate = function () {
        var _a = this.props, value = _a.value, suggestedText = _a.suggestedText;
        var input = this.input;
        if (suggestedText && this.valueChanged && !this.deleting && input) {
            var start = input.selectionStart;
            var end = input.selectionEnd;
            var length_1 = input.value.length;
            if (start === end && start === length_1) {
                input.setSelectionRange(value.length, suggestedText.length);
            }
        }
    };
    SearchBar.prototype.render = function () {
        var _this = this;
        var _a = this.props, id = _a.id, placeholder = _a.placeholder, tabIndex = _a.tabIndex, onKeyDown = _a.onKeyDown, onChange = _a.onChange, onFocus = _a.onFocus, onBlur = _a.onBlur, disabled = _a.disabled, expanded = _a.expanded, owns = _a.owns, activedescendant = _a.activedescendant, clearButton = _a.clearButton, clearButtonClick = _a.clearButtonClick;
        return ([(React.createElement("span", { className: "k-searchbar", key: "searchbar" },
                React.createElement("input", { autoComplete: "off", id: id, placeholder: placeholder, className: "k-input", tabIndex: tabIndex, role: "listbox", value: this.text, onChange: onChange, ref: function (input) { _this.input = input; }, onKeyDown: onKeyDown, onFocus: onFocus, onBlur: onBlur, "aria-disabled": disabled || undefined, disabled: disabled || undefined, "aria-haspopup": true, "aria-expanded": expanded || false, "aria-owns": owns, "aria-activedescendant": activedescendant }))), (clearButton && (React.createElement("span", { className: "k-icon k-clear-value k-i-close", role: "button", onClick: clearButtonClick, onMouseDown: function (event) { event.preventDefault(); }, tabIndex: -1, title: kendo_react_intl_1.provideLocalizationService(this).toLanguageString(messages_1.clear, messages_1.messages[messages_1.clear]), key: "clearbutton" })))]);
    };
    return SearchBar;
}(React.Component));
exports.default = SearchBar;
kendo_react_intl_1.registerForLocalization(SearchBar);
//# sourceMappingURL=SearchBar.js.map